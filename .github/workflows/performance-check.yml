name: Performance Regression Check

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

env:
  CARGO_TERM_COLOR: always

jobs:
  performance-check:
    name: Performance Regression Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for comparison

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install criterion and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc

    - name: Restore baseline benchmarks (if available)
      id: restore-baseline
      uses: actions/cache/restore@v4
      with:
        path: |
          benchmark_baseline.txt
          benchmark_baseline.json
        key: performance-baseline-${{ github.repository }}-${{ github.ref_name }}
        restore-keys: |
          performance-baseline-${{ github.repository }}-main
          performance-baseline-${{ github.repository }}-

    - name: Build benchmarks
      run: cargo build --release --benches

    - name: Run performance regression check
      run: |
        chmod +x scripts/check_performance.sh
        ./scripts/check_performance.sh || exit_code=$?
        echo "exit_code=${exit_code:-0}" >> $GITHUB_OUTPUT
        # If bootstrap, treat as success but note
        if [ -f performance_summary.json ]; then
          status=$(jq -r '.status // empty' performance_summary.json 2>/dev/null || echo "")
          echo "summary_status=${status}" >> $GITHUB_OUTPUT
        fi
        exit ${exit_code:-0}
      continue-on-error: true
      id: perf-check

    - name: Save baseline for future runs (main branch only)
      if: github.ref_name == 'main' && github.event_name == 'push'
      uses: actions/cache/save@v4
      with:
        path: |
          benchmark_baseline.txt
          benchmark_baseline.json
        key: performance-baseline-${{ github.repository }}-${{ github.ref_name }}-${{ github.sha }}

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: benchmark-results
        path: |
          benchmark_*.txt
          benchmark_baseline.json
          performance_summary.json
          performance_summary.md
          target/criterion/
        retention-days: 30

    - name: Post performance summary to PR
      if: github.event_name == 'pull_request' && always() && steps.perf-check.outputs.summary_status != ''
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let md = '# ⚡ Performance Check\n';
          if (fs.existsSync('performance_summary.md')) {
            md += fs.readFileSync('performance_summary.md','utf8');
          } else {
            md += 'Summary file missing.';
          }
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: md
          });

    - name: Fail workflow if regression detected
      if: steps.perf-check.outputs.exit_code == '1'
      run: |
        echo "❌ Performance regression detected - see logs above" && exit 1
    - name: Mark warnings (non-failing)
      if: steps.perf-check.outputs.exit_code == '50'
      run: echo "⚠️ Performance warning (exceeded warn threshold)"
