name: Update Performance Baseline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'benches/**'
      - 'scripts/check_performance.sh'
      - '.github/workflows/performance-baseline.yml'

permissions:
  contents: write

jobs:
  update-baseline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # stable
        with:
          toolchain: stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-perfbase-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks (baseline capture)
        run: |
          cargo bench --bench performance startup_operations 2>/dev/null | grep "time:" > benchmark_baseline.txt || true
          cargo bench --bench performance config_operations 2>/dev/null | grep "time:" >> benchmark_baseline.txt || true
          if [ ! -s benchmark_baseline.txt ]; then
            echo "::error::No benchmark lines captured"; exit 1; fi
          echo "Captured baseline:" && cat benchmark_baseline.txt

      - name: Commit updated baseline (if changed)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git diff --quiet benchmark_baseline.txt; then
            echo "No baseline changes to commit"; exit 0; fi
          git config user.name "perf-bot"
          git config user.email "perf-bot@users.noreply.github.com"
          git add benchmark_baseline.txt
          git commit -m "chore(perf): update benchmark baseline"
          git push origin HEAD:${{ github.ref_name }}

      - name: Summary
        if: always()
        run: |
          echo "# Performance Baseline Update" >> $GITHUB_STEP_SUMMARY
          if [ -f benchmark_baseline.txt ]; then
            echo '```' >> $GITHUB_STEP_SUMMARY
            head -50 benchmark_baseline.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
